plugins {
    id 'java-library'
    id 'jacoco'
    id 'com.github.spotbugs' version '5.0.14'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
    id 'org.sonatype.gradle.plugins.scan' version '2.6.0'
    id "com.github.ben-manes.versions" version '0.47.0'
    id "org.sonarqube" version "4.2.1.3168"
}

group = 'com.imsweb'
version = file('VERSION').text.trim()
description = 'Utility library for SEER Java projects.'

println "Starting build using JDK ${Runtime.version().feature()}"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.13.0'

    testImplementation 'junit:junit:4.13.2'
}

// enforce UTF-8, display the compilation warnings
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

// the Javadoc was made way too strict in Java 8 and it's not worth the time fixing everything!
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

// generate javadoc and sources (required by Nexus)
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

// customize the manifest
jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'Information Management Services Inc.',
                'Created-By': System.properties['java.vm.version'] + ' (' + System.properties['java.vm.vendor'] + ')',
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Automatic-Module-Name': 'com.imsweb.seerutils'
        )
    }
}

// spotbugs plugin settings
spotbugs {
    excludeFilter = file('config/spotbugs/spotbugs-exclude.xml')
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}
test.finalizedBy jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectKey", "imsweb_seerutils"
        property "sonar.organization", "imsweb"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

// Nexus vulnerability scan (see https://github.com/sonatype-nexus-community/scan-gradle-plugin)
ossIndexAudit {
    outputFormat = 'DEPENDENCY_GRAPH'
    printBanner = false
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

// https://github.com/ben-manes/gradle-versions-plugin
tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

// needed to deploy to Maven Central
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'seerutils'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'SEER*Utils'
                description = 'Generic utility classes for SEER Java projects.'
                url = 'https://github.com/imsweb/seerutils'
                inceptionYear = '2015'

                licenses {
                    license {
                        name = 'A modified BSD License (BSD)'
                        url = 'https://github.com/imsweb/seerutils/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'depryf'
                        name = 'Fabian Depry'
                        email = 'depryf@imsweb.com'
                    }
                }

                scm {
                    url = 'https://github.com/imsweb/seerutils'
                    connection = 'scm:https://github.com/imsweb/seerutils.git'
                    developerConnection = 'scm:git@github.com:imsweb/seerutils.git'
                }
            }
        }
    }
}

// setup JAR signing
signing {
    def signingKey = project.findProperty('signing.armored.key') ?: ''
    def signingPassword = project.findProperty('signing.armored.password') ?: ''

    useInMemoryPgpKeys(signingKey, signingPassword)

    sign publishing.publications.mavenJava
}

// needed to release on maven central
nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = 'ImsSeerutilsProfileId'

            username = project.findProperty("nexusUsername")
            password = project.findProperty("nexusPassword")
        }
    }

    clientTimeout = java.time.Duration.ofSeconds(300)
    connectTimeout = java.time.Duration.ofSeconds(60)

    transitionCheckOptions {
        maxRetries.set(50)
        delayBetween.set(java.time.Duration.ofMillis(5000))
    }
}

// don't try to release a snapshot to a non-snapshot repository, that won't work anyway
if (version.endsWith('-SNAPSHOT')) {
    gradle.startParameter.excludedTaskNames += 'signMavenJavaPublication'
    gradle.startParameter.excludedTaskNames += 'closeAndReleaseSonatypeStagingRepository'
}

// Gradle wrapper, this allows to build the project without having to install Gradle!
wrapper {
    gradleVersion = '8.2.1'
    distributionType = Wrapper.DistributionType.ALL
}
